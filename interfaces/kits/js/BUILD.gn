# Copyright (C) 2021-2022 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
import("//build/ohos.gni")
import("//build/ohos/ace/ace.gni")
import("//foundation/multimedia/media_library/media_library.gni")
import("../../../../../../arkcompiler/ets_frontend/ts2panda/ts2abc_config.gni")
import("../../../../../../foundation/arkui/ace_engine/ace_config.gni")

js_declaration("medialibrary_js") {
  part_name = "media_library"
  sources = [ "./@ohos.multimedia.mediaLibrary.d.ts" ]
}

# compile .js to .abc.
action("gen_medialibraryinf_abc") {
  visibility = [ ":*" ]
  script = "../../../../../../arkcompiler/ets_frontend/ts2panda/scripts/generate_js_bytecode.py"

  args = [
    "--src-js",
    rebase_path("${MEDIALIB_JS_PATH}/src/medialibraryinf.js"),
    "--dst-file",
    rebase_path(target_out_dir + "/medialibraryinf.abc"),
    "--node",
    rebase_path("${node_path}"),
    "--frontend-tool-path",
    rebase_path("${ts2abc_build_path}"),
    "--node-modules",
    rebase_path("${node_modules}"),
    "--module",
  ]
  deps =
      [ "../../../../../../arkcompiler/ets_frontend/ts2panda:ark_ts2abc_build" ]

  inputs = [ "${MEDIALIB_JS_PATH}/src/medialibraryinf.js" ]
  outputs = [ target_out_dir + "/medialibraryinf.abc" ]
}

base_output_path = get_label_info(":medialibraryinf_js", "target_out_dir")
medialibraryinf_obj_path = base_output_path + "/medialibraryinf.o"
gen_js_obj("medialibraryinf_js") {
  input = "${MEDIALIB_JS_PATH}/src/medialibraryinf.js"
  output = medialibraryinf_obj_path
  dep = ":gen_medialibraryinf_abc"
}

abc_output_path = get_label_info(":medialibraryinf_abc", "target_out_dir")
medialibraryinf_abc_obj_path = abc_output_path + "/medialibraryinf_abc.o"
gen_js_obj("medialibraryinf_abc") {
  input = "$target_out_dir/medialibraryinf.abc"
  output = medialibraryinf_abc_obj_path
  dep = ":gen_medialibraryinf_abc"
}

config("napi_config") {
  include_dirs = [
    "${MEDIALIB_INNERKITS_PATH}/medialibrary_data_extension/include",
    "${MEDIALIB_INNERKITS_PATH}/media_library_helper/include",
    "${MEDIALIB_SERVICES_PATH}/media_scanner/include/callback",
    "${MEDIALIB_SERVICES_PATH}/media_thumbnail/include",
    "${MEDIALIB_UTILS_PATH}/include",
    "${MEDIALIB_INTERFACES_PATH}/inner_api/media_library_helper/include",
    "${MEDIALIB_INTERFACES_PATH}/kits/js/include",
    "${MEDIALIB_MTP_PATH}/include",
    "${MEDIALIB_INTERFACES_PATH}/innerkits/native/include",
    "${MEDIALIB_UTILS_PATH}/include",
    "${MEDIALIB_SERVICES_PATH}/media_library/include",
    "../../../../../distributedhardware/device_manager/interfaces/inner_kits/native_cpp/include",
  ]

  ldflags = [ "-Wl" ]
}

ohos_shared_library("medialibrary") {
  configs = [ ":napi_config" ]

  version_script = "libmedialibrary.map"

  sources = [
    "${MEDIALIB_INNERKITS_PATH}/media_library_helper/src/media_thumbnail_helper.cpp",
    "${MEDIALIB_INNERKITS_PATH}/medialibrary_data_extension/src/medialibrary_data_manager_utils.cpp",
    "${MEDIALIB_JS_PATH}/src/album_napi.cpp",
    "${MEDIALIB_JS_PATH}/src/fetch_file_result_napi.cpp",
    "${MEDIALIB_JS_PATH}/src/file_asset_napi.cpp",
    "${MEDIALIB_JS_PATH}/src/media_library_napi.cpp",
    "${MEDIALIB_JS_PATH}/src/media_scanner_napi.cpp",
    "${MEDIALIB_JS_PATH}/src/medialibrary_napi_utils.cpp",
    "${MEDIALIB_JS_PATH}/src/napi_error.cpp",
    "${MEDIALIB_JS_PATH}/src/native_module_ohos_medialibrary.cpp",
    "${MEDIALIB_JS_PATH}/src/photo_album_napi.cpp",
    "${MEDIALIB_JS_PATH}/src/smart_album_napi.cpp",
    "${MEDIALIB_JS_PATH}/src/userfile_client.cpp",
  ]

  deps = [
    ":medialibraryinf_abc",
    ":medialibraryinf_js",
    "${MEDIALIB_INNERKITS_PATH}/media_library_helper:media_library",
    "${MEDIALIB_UTILS_PATH}:permission_utils",
  ]

  external_deps = [
    "ability_base:want",
    "ability_base:zuri",
    "ability_runtime:ability_manager",
    "ability_runtime:abilitykit_native",
    "ability_runtime:dataobs_manager",
    "ability_runtime:napi_base_context",
    "access_token:libtokenid_sdk",
    "c_utils:utils",
    "common_event_service:cesfwk_innerkits",
    "data_share:datashare_common",
    "data_share:datashare_consumer",
    "hitrace_native:hitrace_meter",
    "hiviewdfx_hilog_native:libhilog",
    "ipc:ipc_core",
    "ipc_js:rpc",
    "kv_store:distributeddata_inner",
    "multimedia_image_framework:image",
    "multimedia_player_framework:media_client",
    "napi:ace_napi",
    "relational_store:native_rdb",
  ]

  sanitize = {
    cfi = true
    debug = false
  }

  relative_install_dir = "module/multimedia"
  subsystem_name = "multimedia"
  part_name = "media_library"
}

ohos_shared_library("userfilemanager") {
  configs = [ ":napi_config" ]

  sources = [
    "${MEDIALIB_INNERKITS_PATH}/media_library_helper/src/media_thumbnail_helper.cpp",
    "${MEDIALIB_INNERKITS_PATH}/medialibrary_data_extension/src/medialibrary_data_manager_utils.cpp",
    "${MEDIALIB_JS_PATH}/src/album_napi.cpp",
    "${MEDIALIB_JS_PATH}/src/fetch_file_result_napi.cpp",
    "${MEDIALIB_JS_PATH}/src/file_asset_napi.cpp",
    "${MEDIALIB_JS_PATH}/src/media_library_napi.cpp",
    "${MEDIALIB_JS_PATH}/src/media_scanner_napi.cpp",
    "${MEDIALIB_JS_PATH}/src/medialibrary_napi_utils.cpp",
    "${MEDIALIB_JS_PATH}/src/napi_error.cpp",
    "${MEDIALIB_JS_PATH}/src/native_module_ohos_userfile_manager.cpp",
    "${MEDIALIB_JS_PATH}/src/photo_album_napi.cpp",
    "${MEDIALIB_JS_PATH}/src/smart_album_napi.cpp",
    "${MEDIALIB_JS_PATH}/src/userfile_client.cpp",
  ]

  deps = [
    "${MEDIALIB_INNERKITS_PATH}/media_library_helper:media_library",
    "${MEDIALIB_UTILS_PATH}:permission_utils",
  ]

  external_deps = [
    "ability_base:want",
    "ability_base:zuri",
    "ability_runtime:ability_manager",
    "ability_runtime:abilitykit_native",
    "ability_runtime:dataobs_manager",
    "ability_runtime:napi_base_context",
    "access_token:libtokenid_sdk",
    "c_utils:utils",
    "common_event_service:cesfwk_innerkits",
    "data_share:datashare_common",
    "data_share:datashare_consumer",
    "hitrace_native:hitrace_meter",
    "hiviewdfx_hilog_native:libhilog",
    "ipc:ipc_core",
    "ipc_js:rpc",
    "kv_store:distributeddata_inner",
    "multimedia_image_framework:image",
    "multimedia_player_framework:media_client",
    "napi:ace_napi",
    "relational_store:native_dataability",
    "relational_store:native_rdb",
  ]

  sanitize = {
    cfi = true
    debug = false
  }

  relative_install_dir = "module/filemanagement"
  subsystem_name = "multimedia"
  part_name = "media_library"
}
