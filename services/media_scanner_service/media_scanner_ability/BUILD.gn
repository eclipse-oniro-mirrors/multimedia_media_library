# Copyright (C) 2021 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/ohos.gni")
import("//foundation/multimedia/medialibrary_standard/media_library.gni")

config("media_scanner_ability_public_config") {
  include_dirs = [
    "//foundation/aafwk/standard/interfaces/innerkits/want/include",
    "//foundation/aafwk/standard/interfaces/innerkits/want/include/ohos/aafwk/content",
    "//foundation/aafwk/standard/interfaces/innerkits/ability_manager/include",
    "//foundation/aafwk/standard/interfaces/innerkits/app_manager/include/appmgr",
    "//foundation/aafwk/standard/frameworks/kits/ability/native/include",
    "//utils/native/base/include",
    "//utils/system/safwk/native/include",
    "${MEDIA_LIB_BASE_DIR}/interfaces/inner_api/media_library_helper/include",
    "$MEDIA_LIB_BASE_DIR/services/media_scanner_service/client/include",
    "$MEDIA_LIB_BASE_DIR/services/media_scanner_service/ipc/include",
    "$MEDIA_LIB_BASE_DIR/services/media_scanner_service/media_scanner_ability/include",
    "$MEDIA_LIB_INNERKITS_DIR/media_scanner/include",
    "//drivers/peripheral/display/interfaces/include",
    "//drivers/peripheral/base",
    "//foundation/multimedia/media_standard/interfaces/inner_api/native",
    "//third_party/json/include",
    "//foundation/distributeddatamgr/appdatamgr/interfaces/inner_api/native/rdb/include",
    "//foundation/distributeddatamgr/appdatamgr/frameworks/native/rdb/include",
    "//foundation/distributeddatamgr/appdatamgr/frameworks/native/appdatafwk/include",
    "//foundation/multimedia/image_standard/interfaces/innerkits/include",
    "//foundation/multimedia/medialibrary_standard/frameworks/kitsimpl/media_service_extension/include",
  ]

  if (target_cpu == "arm") {
    cflags = [ "-DBINDER_IPC_32BIT" ]
  }
}

ohos_hap("mediascanner_dynamic_hap") {
  hap_profile = "./config.json"
  js2abc = false
  shared_libraries = [ ":media_scanner_service" ]
  certificate_profile = "$MEDIA_LIB_INNERKITS_DIR/signature/medialib.p7b"
  hap_name = "Media_Scanner"
  part_name = "prebuilt_hap"
  subsystem_name = "applications"
  module_install_dir = "app/com.ohos.medialibrary.MediaScannerAbilityA"
}

ohos_shared_library("media_scanner_service") {
  install_enable = true
  sources = [
    "$MEDIA_LIB_BASE_DIR/services/media_scanner_service/ipc/src/media_scanner_ability_stub.cpp",
    "$MEDIA_LIB_BASE_DIR/services/media_scanner_service/ipc/src/media_scanner_operation_callback_proxy.cpp",
    "$MEDIA_LIB_INNERKITS_DIR/media_scanner/src/media_scan_executor.cpp",
    "$MEDIA_LIB_INNERKITS_DIR/media_scanner/src/media_scanner.cpp",
    "$MEDIA_LIB_INNERKITS_DIR/media_scanner/src/media_scanner_db.cpp",
    "$MEDIA_LIB_INNERKITS_DIR/media_scanner/src/metadata.cpp",
    "$MEDIA_LIB_INNERKITS_DIR/media_scanner/src/metadata_extractor.cpp",
    "$MEDIA_LIB_INNERKITS_DIR/media_scanner/src/scanner_utils.cpp",
    "src/media_scanner_ability.cpp",
    "src/media_scanner_ability_service.cpp",
  ]

  public_configs = [ ":media_scanner_ability_public_config" ]

  deps = [
    "//base/hiviewdfx/hilog/interfaces/native/innerkits:libhilog",
    "//foundation/aafwk/standard/frameworks/kits/ability/native:abilitykit_native",
    "//foundation/aafwk/standard/interfaces/innerkits/want:want",
    "//foundation/multimedia/image_standard/interfaces/innerkits:image_native",
    "//foundation/multimedia/media_standard/interfaces/inner_api/native:media_client",
    "//foundation/multimedia/medialibrary_standard/frameworks/kitsimpl/media_service_extension:media_service_extension",
    "//utils/native/base:utils",
  ]

  external_deps = [
    "ability_base:zuri",
    "bytrace_standard:bytrace_core",
    "hiviewdfx_hilog_native:libhilog",
    "ipc:ipc_core",
    "native_appdatamgr:native_appdatafwk",
    "native_appdatamgr:native_dataability",
    "native_appdatamgr:native_rdb",
    "samgr_standard:samgr_proxy",
  ]

  subsystem_name = "multimedia"
  part_name = "multimedia_media_library_standard"
}
