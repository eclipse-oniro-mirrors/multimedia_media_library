# Copyright (C) 2021 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/ohos.gni")
MEDIA_LIB_BASE_DIR = "//foundation/multimedia/medialibrary_standard"
MEDIA_LIB_INNERKITS_DIR = "$MEDIA_LIB_BASE_DIR/frameworks/innerkitsimpl"

group("media_library_service_packages") {
    deps = [
            ":medialibrary_service.rc",
            ":medialibrary_service",
            ":medialibrary_proxy",
    ]
}

ohos_prebuilt_etc("medialibrary_service.rc") {
  if (use_musl) {
    source = "etc/medialibrary_service.cfg"
  } else {
    source = "etc/medialibrary_service.rc"
  }
  relative_install_dir = "init"
  part_name = "multimedia_media_library_standard"
  subsystem_name = "multimedia"
}


ohos_shared_library("medialibrary_service") {
  install_enable = true
  sources = [
    "$MEDIA_LIB_BASE_DIR/services/src/server/media_lib_service.cpp",
    "$MEDIA_LIB_BASE_DIR/services/src/server/media_lib_service_stub.cpp",
  ]

  cflags = [ "-fPIC" ]
  cflags += [ "-Wall" ]

  if (target_cpu == "arm") {
    cflags += [ "-DBINDER_IPC_32BIT" ]
  }

  cflags_cc = cflags
  include_dirs =
      [ "//base/hiviewdfx/hilog/interfaces/native/innerkits/include/hilog",
        "$MEDIA_LIB_BASE_DIR/services/include"]

  public_configs = [ ":medialibrary_external_library_config" ]

  deps = [
    "$MEDIA_LIB_INNERKITS_DIR/media_library:media_library",
    "//base/hiviewdfx/hilog/interfaces/native/innerkits:libhilog",
    "//utils/native/base:utils",
  ]

  external_deps = [
    "ipc:ipc_core",
    "safwk:system_ability_fwk",
    "samgr_L2:samgr_proxy",
  ]

  part_name = "multimedia_media_library_standard"
  subsystem_name = "multimedia"
}

ohos_shared_library("medialibrary_proxy") {
  install_enable = true
  sources = [
    "$MEDIA_LIB_BASE_DIR/services/src/client/media_lib_proxy.cpp",
  ]

  public_configs = [ ":medialib_proxy_public_config" ]

  deps = [
    "$MEDIA_LIB_INNERKITS_DIR/media_library:media_library",
    "$MEDIA_LIB_BASE_DIR/services:medialibrary_service",
    "//utils/native/base:utils",
  ]

  external_deps = [
    "ipc:ipc_core",
    "hiviewdfx_hilog_native:libhilog",
    "samgr_L2:samgr_proxy",
  ]
  subsystem_name = "multimedia"
  part_name = "multimedia_media_library_standard"
}

config("medialibrary_external_library_config") {
  include_dirs = [ "$MEDIA_LIB_BASE_DIR/services/include/server" ]
  include_dirs += [ "$MEDIA_LIB_BASE_DIR/interfaces/innerkits/native/include" ]
}

config("medialib_proxy_public_config") {
  include_dirs = [
    "$MEDIA_LIB_BASE_DIR/services/include",
    "$MEDIA_LIB_BASE_DIR/services/include/client",
    "$MEDIA_LIB_BASE_DIR/interfaces/innerkits/native/include",
    "$MEDIA_LIB_INNERKITS_DIR/media_library/include",
    "//utils/native/base/include",
    "//utils/system/safwk/native/include",
  ]

  if (target_cpu == "arm") {
    cflags = [ "-DBINDER_IPC_32BIT" ]
  }
}

