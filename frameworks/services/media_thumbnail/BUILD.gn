# Copyright (C) 2022 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/ohos.gni")
import("//foundation/multimedia/media_library/media_library.gni")

ohos_shared_library("medialibrary_thumbnail") {
  install_enable = true

  media_distributed_source = [ "${MEDIALIB_SERVICES_PATH}/media_distributed/src/database_manage/medialibrary_sync_operation.cpp" ]

  sources = [
    "${MEDIALIB_SERVICES_PATH}/media_thumbnail/src/default_thumbnail_helper.cpp",
    "${MEDIALIB_SERVICES_PATH}/media_thumbnail/src/ithumbnail_helper.cpp",
    "${MEDIALIB_SERVICES_PATH}/media_thumbnail/src/lcd_thumbnail_helper.cpp",
    "${MEDIALIB_SERVICES_PATH}/media_thumbnail/src/micro_helper.cpp",
    "${MEDIALIB_SERVICES_PATH}/media_thumbnail/src/thumbnail_aging_helper.cpp",
    "${MEDIALIB_SERVICES_PATH}/media_thumbnail/src/thumbnail_datashare_bridge.cpp",
    "${MEDIALIB_SERVICES_PATH}/media_thumbnail/src/thumbnail_generate_helper.cpp",
    "${MEDIALIB_SERVICES_PATH}/media_thumbnail/src/thumbnail_helper_factory.cpp",
    "${MEDIALIB_SERVICES_PATH}/media_thumbnail/src/thumbnail_service.cpp",
    "${MEDIALIB_SERVICES_PATH}/media_thumbnail/src/thumbnail_uri_utils.cpp",
    "${MEDIALIB_SERVICES_PATH}/media_thumbnail/src/thumbnail_utils.cpp",
  ]
  sources += media_distributed_source

  cflags = [ "-fPIC" ]
  cflags += [ "-Wall" ]

  if (target_cpu == "arm") {
    cflags += [ "-DBINDER_IPC_32BIT" ]
  }

  cflags_cc = cflags

  include_distributed =
      [ "${MEDIALIB_SERVICES_PATH}/media_distributed/include/database_manage" ]

  include_dirs = [
    "${MEDIALIB_SERVICES_PATH}/media_thumbnail/include",
    "${MEDIALIB_UTILS_PATH}/include",
    "${MEDIALIB_INTERFACES_PATH}/inner_api/media_library_helper/include",
    "${MEDIALIB_UTILS_PATH}/include",
    "${MEDIALIB_INNERKITS_PATH}/media_library_helper/include",
    "${MEDIALIB_SERVICES_PATH}/media_async_worker/include",
    "${MEDIALIB_CLOUD_SYNC_PATH}/include",
    "../../../../player_framework/interfaces/innerkits/native/media/include/",
  ]
  include_dirs += include_distributed

  deps = [
    "${MEDIALIB_CLOUD_SYNC_PATH}:cloud_sync",
    "${MEDIALIB_INNERKITS_PATH}/media_library_helper:media_library",
    "${MEDIALIB_SERVICES_PATH}/media_async_worker:medialibrary_async_worker",
    "${MEDIALIB_UTILS_PATH}:medialibrary_common_utils",
    "../../../../player_framework/services/utils:media_service_utils",
  ]

  external_deps = [
    "ability_base:want",
    "ability_base:zuri",
    "ability_runtime:ability_manager",
    "ability_runtime:abilitykit_native",
    "ability_runtime:app_context",
    "ability_runtime:dataobs_manager",
    "ability_runtime:runtime",
    "c_utils:utils",
    "common_event_service:cesfwk_innerkits",
    "data_share:datashare_common",
    "data_share:datashare_consumer",
    "device_manager:devicemanagersdk",
    "dfs_service:cloudsync_kit_inner",
    "hitrace_native:hitrace_meter",
    "hiviewdfx_hilog_native:libhilog",
    "init:libbegetutil",
    "ipc:ipc_core",
    "kv_store:distributeddata_inner",
    "multimedia_image_framework:image_native",
    "multimedia_player_framework:media_client",
    "relational_store:native_rdb",
    "safwk:system_ability_fwk",
    "samgr:samgr_proxy",
    "window_manager:libdm",
  ]

  sanitize = {
    cfi = true
    debug = false
  }

  part_name = "media_library"
  subsystem_name = "multimedia"
}
