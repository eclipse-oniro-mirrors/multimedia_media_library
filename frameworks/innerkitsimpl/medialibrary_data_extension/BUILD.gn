# Copyright (C) 2021-2023 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/ohos.gni")
import("//foundation/multimedia/media_library/media_library.gni")

ohos_prebuilt_etc("userfilemanager_mimetypes.json") {
  module_install_dir = "etc/userfilemanager"

  source = "${MEDIALIB_UTILS_PATH}/configs/userfilemanager_mimetypes.json"

  subsystem_name = "multimedia"
  part_name = "media_library"
}

config("media_data_extension_public_config") {
  include_fileext = [ "${MEDIALIB_SERVICES_PATH}/media_file_extension/include" ]
  include_distributed = [
    "${MEDIALIB_SERVICES_PATH}/media_distributed/include/database_manage",
    "${MEDIALIB_SERVICES_PATH}/media_distributed/include/device_manage",
    "${MEDIALIB_SERVICES_PATH}/media_distributed/include/devices_info_interact",
  ]
  include_scanner = [
    "${MEDIALIB_SERVICES_PATH}/media_scanner/include/callback",
    "${MEDIALIB_SERVICES_PATH}/media_scanner/include/scanner",
  ]

  include_dirs = [
    "${MEDIALIB_INTERFACES_PATH}/innerkits/native/include",
    "${MEDIALIB_INTERFACES_PATH}/inner_api/media_library_helper/include",
    "${MEDIALIB_INNERKITS_PATH}/media_library_helper/include",
    "${MEDIALIB_UTILS_PATH}/include",
    "${MEDIALIB_INNERKITS_PATH}/medialibrary_data_extension/include",
    "${MEDIALIB_SERVICES_PATH}/media_async_worker/include",
    "${MEDIALIB_SERVICES_PATH}/media_thumbnail/include",

    "../../../../../bundlemanager/bundle_framework/interfaces/kits/js/common",
    "../../../../../distributeddatamgr/distributedfile/interfaces/kits/js/src/common",
  ]
  include_dirs += include_fileext
  include_dirs += include_distributed
  include_dirs += include_scanner

  if (target_cpu == "arm") {
    cflags = [ "-DBINDER_IPC_32BIT" ]
  }
}

ohos_hap("medialibrary_ext_hap") {
  hap_profile = "MediaLibraryExt/entry/src/main/module.json"
  deps = [
    ":MediaLibStage_js_assets",
    ":MediaLibStage_resources",
  ]
  shared_libraries = [ "${MEDIALIB_INNERKITS_PATH}/medialibrary_data_extension:medialibrary_data_extension" ]
  certificate_profile = "${MEDIALIB_INNERKITS_PATH}/signature/medialib.p7b"
  hap_name = "Media_Library_Ext"
  part_name = "prebuilt_hap"
  subsystem_name = "applications"
  module_install_dir = "app/com.ohos.medialibrary.MediaLibraryData"
}

ohos_js_assets("MediaLibStage_js_assets") {
  hap_profile = "MediaLibraryExt/entry/src/main/module.json"
  ets2abc = true
  source_dir = "MediaLibraryExt/entry/src/main/ets"
}

ohos_app_scope("MediaLibStage_app_profile") {
  app_profile = "MediaLibraryExt/AppScope/app.json"
  sources = [ "MediaLibraryExt/AppScope/resources" ]
}

ohos_resources("MediaLibStage_resources") {
  sources = [ "MediaLibraryExt/entry/src/main/resources" ]
  deps = [ ":MediaLibStage_app_profile" ]
  hap_profile = "MediaLibraryExt/entry/src/main/module.json"
}

ohos_shared_library("medialibrary_data_extension") {
  install_enable = true

  media_fileext_source = [
    "${MEDIALIB_SERVICES_PATH}/media_file_extension/src/media_file_ext_ability.cpp",
    "${MEDIALIB_SERVICES_PATH}/media_file_extension/src/media_file_extention_utils.cpp",
  ]

  media_distributed_source = [
    "${MEDIALIB_SERVICES_PATH}/media_distributed/src/database_manage/medialibrary_device_db.cpp",
    "${MEDIALIB_SERVICES_PATH}/media_distributed/src/database_manage/medialibrary_device_operations.cpp",
    "${MEDIALIB_SERVICES_PATH}/media_distributed/src/database_manage/medialibrary_sync_operation.cpp",
    "${MEDIALIB_SERVICES_PATH}/media_distributed/src/device_manage/device_permission_verification.cpp",
    "${MEDIALIB_SERVICES_PATH}/media_distributed/src/device_manage/medialibrary_device.cpp",
    "${MEDIALIB_SERVICES_PATH}/media_distributed/src/devices_info_interact//devices_info_interact.cpp",
  ]

  media_scan_source = [
    "${MEDIALIB_SERVICES_PATH}/media_scanner/src/scanner/media_scan_executor.cpp",
    "${MEDIALIB_SERVICES_PATH}/media_scanner/src/scanner/media_scanner.cpp",
    "${MEDIALIB_SERVICES_PATH}/media_scanner/src/scanner/media_scanner_manager.cpp",
    "${MEDIALIB_SERVICES_PATH}/media_scanner/src/scanner/media_scanner_db.cpp",
    "${MEDIALIB_SERVICES_PATH}/media_scanner/src/scanner/metadata.cpp",
    "${MEDIALIB_SERVICES_PATH}/media_scanner/src/scanner/metadata_extractor.cpp",
    "${MEDIALIB_SERVICES_PATH}/media_scanner/src/scanner/scanner_utils.cpp",
  ]

  sources = [
    "${MEDIALIB_UTILS_PATH}/src/media_privacy_manager.cpp",
    "../../../../../../foundation/distributeddatamgr/relational_store/frameworks/native/rdb/src/sqlite_sql_builder.cpp",
    "../../../../../../foundation/distributeddatamgr/relational_store/frameworks/native/rdb/src/string_utils.cpp",
    "src/media_datashare_ext_ability.cpp",
    "src/media_datashare_stub_impl.cpp",
    "src/medialibrary_album_operations.cpp",
    "src/medialibrary_asset_operations.cpp",
    "src/medialibrary_audio_operations.cpp",
    "src/medialibrary_command.cpp",
    "src/medialibrary_data_manager.cpp",
    "src/medialibrary_data_manager_utils.cpp",
    "src/medialibrary_dir_operations.cpp",
    "src/medialibrary_file_operations.cpp",
    "src/medialibrary_inotify.cpp",
    "src/medialibrary_notify.cpp",
    "src/medialibrary_object_utils.cpp",
    "src/medialibrary_photo_operations.cpp",
    "src/medialibrary_rdbstore.cpp",
    "src/medialibrary_smartalbum_map_operations.cpp",
    "src/medialibrary_smartalbum_operations.cpp",
    "src/medialibrary_subscriber.cpp",
    "src/medialibrary_uripermission_operations.cpp",
    "src/photo_map_operations.cpp",
    "src/trash_async_worker.cpp",
  ]
  sources += media_fileext_source
  sources += media_distributed_source
  sources += media_scan_source

  public_configs = [ ":media_data_extension_public_config" ]

  deps = [
    "${MEDIALIB_CLOUD_SYNC_PATH}:cloud_sync",
    "${MEDIALIB_INNERKITS_PATH}/media_library_helper:media_library",
    "${MEDIALIB_SERVICES_PATH}/media_async_worker:medialibrary_async_worker",
    "${MEDIALIB_SERVICES_PATH}/media_thumbnail:medialibrary_thumbnail",
    "${MEDIALIB_UTILS_PATH}:medialibrary_common_utils",
    "${MEDIALIB_UTILS_PATH}:permission_utils",
  ]

  include_dirs = [ "${MEDIALIB_CLOUD_SYNC_PATH}/include" ]

  external_deps = [
    "ability_base:want",
    "ability_base:zuri",
    "ability_runtime:ability_manager",
    "ability_runtime:app_context",
    "ability_runtime:app_manager",
    "ability_runtime:dataobs_manager",
    "ability_runtime:extensionkit_native",
    "ability_runtime:runtime",
    "c_utils:utils",
    "common_event_service:cesfwk_innerkits",
    "data_share:datashare_common",
    "data_share:datashare_provider",
    "device_auth:deviceauth_sdk",
    "device_manager:devicemanagersdk",
    "device_security_level:dslm_sdk",
    "dfs_service:cloudsync_kit_inner",
    "eventhandler:libeventhandler",
    "file_api:filemgmt_libn",
    "hitrace_native:hitrace_meter",
    "hiviewdfx_hilog_native:libhilog",
    "init:libbegetutil",
    "ipc:ipc_core",
    "kv_store:distributeddata_inner",
    "multimedia_image_framework:image_native",
    "multimedia_player_framework:media_client",
    "relational_store:native_rdb",
    "relational_store:rdb_data_share_adapter",
    "user_file_service:file_access_extension_ability_kit",
  ]

  sanitize = {
    cfi = true
    debug = false
    blocklist = "./extension_blocklist.txt"
  }

  subsystem_name = "multimedia"
  part_name = "media_library"
}
