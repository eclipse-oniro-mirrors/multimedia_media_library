# Copyright (c) 2025 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/test.gni")
import("//foundation/multimedia/media_library/media_library.gni")

ohos_fuzztest("MediaLibraryCloudMediaMapCodeDaoFuzzTest") {
  module_out_path = "media_library/media_library"
  fuzz_config_file = "."

  include_dirs = [
    "./include",
    "${MEDIALIB_INNERKITS_PATH}/medialibrary_data_extension/include",
    "${MEDIALIB_SERVICES_PATH}/inner_api/native/cloud_sync",
    "${MEDIALIB_INTERFACES_PATH}/kits/js/include",
    "${MEDIALIB_INNERKITS_PATH}/media_library_cloud_sync/include",
  ]

  sources = [
    "${MEDIALIB_CLOUD_SYNC_SERVICE_PATH}/src/dao/cloud_media_common_dao.cpp",
    "${MEDIALIB_CLOUD_SYNC_SERVICE_PATH}/src/dao/cloud_media_photos_dao.cpp",
    "${MEDIALIB_CLOUD_SYNC_SERVICE_PATH}/src/dto/cloud_file_data_dto.cpp",
    "${MEDIALIB_CLOUD_SYNC_SERVICE_PATH}/src/dto/photo_album_dto.cpp",
    "${MEDIALIB_CLOUD_SYNC_SERVICE_PATH}/src/dto/photos_dto.cpp",
    "${MEDIALIB_CLOUD_SYNC_SERVICE_PATH}/src/utils/cloud_media_file_utils.cpp",
    "${MEDIALIB_CLOUD_SYNC_SERVICE_PATH}/src/utils/cloud_media_dao_utils.cpp",
    "${MEDIALIB_CLOUD_SYNC_SERVICE_PATH}/src/utils/cloud_media_sync_utils.cpp",
    "${MEDIALIB_CLOUD_SYNC_SERVICE_PATH}/src/utils/cloud_sync_convert.cpp",
    "${MEDIALIB_CLOUD_SYNC_SERVICE_PATH}/src/utils/media_gallery_sync_notify.cpp",
    "${MEDIALIB_JS_PATH}/src/userfile_client.cpp",
    "./medialibrarycloudmediamapcodedao_fuzzer.cpp",
    "${MEDIALIB_CLOUD_SYNC_SERVICE_PATH}/src/dao/cloud_map_code_dao.cpp",
    "${MEDIALIB_INNERKITS_PATH}/medialibrary_data_extension/src/operation/photo_map_code_column.cpp",
    "${MEDIALIB_INNERKITS_PATH}/medialibrary_data_extension/src/operation/photo_map_code_operation.cpp",
  ]

  deps = [
    "${MEDIALIB_INNERKITS_PATH}/media_library_cloud_sync:media_library_cloud_sync",
    "${MEDIALIB_INNERKITS_PATH}/media_library_helper:media_library",
    "${MEDIALIB_INNERKITS_PATH}/medialibrary_data_extension:medialibrary_data_extension",
    "${MEDIALIB_INTERFACES_PATH}/kits/js:medialibrary_nutils",
  ]

  external_deps = [
    "ability_base:configuration",
    "ability_base:want",
    "ability_base:zuri",
    "ability_runtime:ability_context_native",
    "ability_runtime:ability_manager",
    "ability_runtime:abilitykit_native",
    "ability_runtime:app_context",
    "ability_runtime:app_manager",
    "ability_runtime:dataobs_manager",
    "ability_runtime:napi_base_context",
    "ability_runtime:runtime",
    "access_token:libtokenid_sdk",
    "bundle_framework:appexecfwk_core",
    "c_utils:utils",
    "common_event_service:cesfwk_innerkits",
    "data_share:datashare_common",
    "data_share:datashare_consumer",
    "data_share:datashare_provider",
    "dfs_service:cloudsync_kit_inner",
    "hilog:libhilog",
    "hitrace:hitrace_meter",
    "image_framework:image_native",
    "ipc:ipc_napi",
    "ipc:ipc_single",
    "kv_store:distributeddata_inner",
    "napi:ace_napi",
    "player_framework:media_client",
    "relational_store:native_rdb",
    "relational_store:rdb_data_share_adapter",
    "dfs_service:cloudfile_kit",
  ]
}
