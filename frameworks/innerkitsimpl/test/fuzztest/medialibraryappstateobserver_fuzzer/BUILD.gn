# Copyright (c) 2024 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/test.gni")
import("//foundation/multimedia/media_library/media_library.gni")

ohos_fuzztest("MediaLibraryAppstateObserverFuzzTest") {
  module_out_path = "media_library/media_library"
  fuzz_config_file = "."

  include_dirs = [
    ".",
    "${MEDIALIB_INNERKITS_PATH}/medialibrary_data_extension/include",
    "${MEDIALIB_INNERKITS_PATH}/media_library_helper/include",
    "${MEDIALIB_INTERFACES_PATH}/inner_api/media_library_helper/include",
    "${MEDIALIB_UTILS_PATH}/include",
  ]

  sources = [
    "${MEDIALIB_INNERKITS_PATH}/medialibrary_data_extension/src/medialibrary_appstate_observer.cpp",
    "./medialibraryappstateobserver_fuzzer.cpp",
  ]

  deps = [
    "${MEDIALIB_INNERKITS_PATH}/media_library_helper:media_library",
    "${MEDIALIB_INNERKITS_PATH}/medialibrary_data_extension:medialibrary_data_extension",
  ]

  external_deps = [
    "ability_base:base",
    "ability_base:want",
    "ability_base:zuri",
    "ability_runtime:ability_manager",
    "ability_runtime:app_context",
    "ability_runtime:app_manager",
    "ability_runtime:dataobs_manager",
    "ability_runtime:extensionkit_native",
    "ability_runtime:runtime",
    "ability_runtime:uri_permission_mgr",
    "access_token:libaccesstoken_sdk",
    "access_token:libprivacy_sdk",
    "app_file_service:sandbox_helper_native",
    "background_task_mgr:bgtaskmgr_innerkits",
    "bundle_framework:appexecfwk_core",
    "c_utils:utils",
    "common_event_service:cesfwk_innerkits",
    "data_share:datashare_common",
    "data_share:datashare_consumer",
    "data_share:datashare_provider",
    "dfs_service:cloudsync_kit_inner",
    "drivers_interface_display:display_commontype_idl_headers",
    "eventhandler:libeventhandler",
    "ffrt:libffrt",
    "file_api:filemgmt_libn",
    "hilog:libhilog",
    "hitrace:hitrace_meter",
    "image_framework:image_native",
    "init:libbeget_proxy",
    "init:libbegetutil",
    "ipc:ipc_single",
    "kv_store:distributeddata_inner",
    "libexif:libexif",
    "libfuse:libfuse",
    "napi:ace_napi",
    "os_account:os_account_innerkits",
    "player_framework:media_client",
    "player_framework:video_editor",
    "preferences:native_preferences",
    "relational_store:native_rdb",
    "relational_store:rdb_data_share_adapter",
    "safwk:system_ability_fwk",
    "samgr:samgr_proxy",
    "storage_service:storage_manager_sa_proxy",
    "window_manager:libdm",
    "zlib:shared_libz",
  ]
}
