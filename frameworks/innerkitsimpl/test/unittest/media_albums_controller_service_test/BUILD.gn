# Copyright (C) 2025 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/test.gni")
import("//foundation/multimedia/media_library/media_library.gni")

group("unittest") {
  testonly = true
  deps = [ ":media_albums_controller_service_test" ]
}

ohos_unittest("media_albums_controller_service_test") {
  module_out_path = "media_library/medialibrary-album"
  include_dirs = [
    "${MEDIALIB_CLOUD_SYNC_PATH}/include",
    "${MEDIALIB_INTERFACES_PATH}/inner_api/media_library_helper/include",
    "${MEDIALIB_INTERFACES_PATH}/kits/js/include",
    "${MEDIALIB_INTERFACES_PATH}/kits/js/include/napi",
    "${MEDIALIB_INNERKITS_PATH}/medialibrary_data_extension/include",
    "${MEDIALIB_INNERKITS_PATH}/medialibrary_data_extension/include/config",
    "${MEDIALIB_INNERKITS_PATH}/medialibrary_data_extension/include/event_handler",
    "${MEDIALIB_INNERKITS_PATH}/media_library_helper/include",
    "${MEDIALIB_BUSINESS_PATH}/media_albums_manager/include/",
    "${MEDIALIB_BUSINESS_PATH}/media_albums_manager/include/controller",
    "${MEDIALIB_BUSINESS_PATH}/media_albums_manager/include/dto",
    "${MEDIALIB_BUSINESS_PATH}/media_albums_manager/include/vo",
    "${MEDIALIB_SERVICES_PATH}/media_analysis_extension/include",
    "../medialibrary_unittest_utils/include",
    "./include",
    "../get_self_permissions/include",
  ]

  include_media_ipc = [
    "${MEDIALIB_INNERKITS_PATH}/medialibrary_data_extension/include/ipc",
    "${MEDIALIB_INNERKITS_PATH}/medialibrary_data_extension/include/ipc/vo",
    "${MEDIALIB_INNERKITS_PATH}/medialibrary_data_extension/include/ipc/util",
    "${MEDIALIB_INNERKITS_PATH}/medialibrary_data_extension/include/ipc/controller",
  ]

  include_dirs += include_media_ipc

  sources = [
    "${MEDIALIB_BUSINESS_PATH}/media_albums_manager/src/vo/album_add_assets_vo.cpp",
    "${MEDIALIB_BUSINESS_PATH}/media_albums_manager/src/vo/album_commit_modify_vo.cpp",
    "${MEDIALIB_BUSINESS_PATH}/media_albums_manager/src/vo/album_get_assets_vo.cpp",
    "${MEDIALIB_BUSINESS_PATH}/media_albums_manager/src/vo/album_photo_query_vo.cpp",
    "${MEDIALIB_BUSINESS_PATH}/media_albums_manager/src/vo/album_recover_assets_vo.cpp",
    "${MEDIALIB_BUSINESS_PATH}/media_albums_manager/src/vo/album_remove_assets_vo.cpp",
    "${MEDIALIB_BUSINESS_PATH}/media_albums_manager/src/vo/change_request_add_assets_vo.cpp",
    "${MEDIALIB_BUSINESS_PATH}/media_albums_manager/src/vo/change_request_delete_assets_vo.cpp",
    "${MEDIALIB_BUSINESS_PATH}/media_albums_manager/src/vo/change_request_dismiss_assets_vo.cpp",
    "${MEDIALIB_BUSINESS_PATH}/media_albums_manager/src/vo/change_request_dismiss_vo.cpp",
    "${MEDIALIB_BUSINESS_PATH}/media_albums_manager/src/vo/change_request_merge_album_vo.cpp",
    "${MEDIALIB_BUSINESS_PATH}/media_albums_manager/src/vo/change_request_move_assets_vo.cpp",
    "${MEDIALIB_BUSINESS_PATH}/media_albums_manager/src/vo/change_request_place_before_vo.cpp",
    "${MEDIALIB_BUSINESS_PATH}/media_albums_manager/src/vo/change_request_recover_assets_vo.cpp",
    "${MEDIALIB_BUSINESS_PATH}/media_albums_manager/src/vo/change_request_remove_assets_vo.cpp",
    "${MEDIALIB_BUSINESS_PATH}/media_albums_manager/src/vo/change_request_set_album_name_vo.cpp",
    "${MEDIALIB_BUSINESS_PATH}/media_albums_manager/src/vo/change_request_set_cover_uri_vo.cpp",
    "${MEDIALIB_BUSINESS_PATH}/media_albums_manager/src/vo/change_request_set_display_level_vo.cpp",
    "${MEDIALIB_BUSINESS_PATH}/media_albums_manager/src/vo/change_request_set_is_me_vo.cpp",
    "${MEDIALIB_BUSINESS_PATH}/media_albums_manager/src/vo/change_request_set_order_position_vo.cpp",
    "${MEDIALIB_BUSINESS_PATH}/media_albums_manager/src/vo/change_request_set_relationship_vo.cpp",
    "${MEDIALIB_BUSINESS_PATH}/media_albums_manager/src/vo/get_relationship_vo.cpp",
    "${MEDIALIB_BUSINESS_PATH}/media_albums_manager/src/vo/change_request_set_highlight_attribute_vo.cpp",
    "${MEDIALIB_BUSINESS_PATH}/media_albums_manager/src/vo/create_album_vo.cpp",
    "${MEDIALIB_BUSINESS_PATH}/media_albums_manager/src/vo/delete_albums_vo.cpp",
    "${MEDIALIB_BUSINESS_PATH}/media_albums_manager/src/vo/delete_highlight_albums_vo.cpp",
    "${MEDIALIB_BUSINESS_PATH}/media_albums_manager/src/vo/get_albums_by_ids_vo.cpp",
    "${MEDIALIB_BUSINESS_PATH}/media_albums_manager/src/vo/get_analysis_process_vo.cpp",
    "${MEDIALIB_BUSINESS_PATH}/media_albums_manager/src/vo/get_face_id_vo.cpp",
    "${MEDIALIB_BUSINESS_PATH}/media_albums_manager/src/vo/get_highlight_album_info_vo.cpp",
    "${MEDIALIB_BUSINESS_PATH}/media_albums_manager/src/vo/get_order_position_vo.cpp",
    "${MEDIALIB_BUSINESS_PATH}/media_albums_manager/src/vo/get_photo_album_object_vo.cpp",
    "${MEDIALIB_BUSINESS_PATH}/media_albums_manager/src/vo/get_photo_index_vo.cpp",
    "${MEDIALIB_BUSINESS_PATH}/media_albums_manager/src/vo/query_albums_vo.cpp",
    "${MEDIALIB_BUSINESS_PATH}/media_albums_manager/src/vo/query_result_vo.cpp",
    "${MEDIALIB_BUSINESS_PATH}/media_albums_manager/src/vo/set_highlight_user_action_data_vo.cpp",
    "${MEDIALIB_BUSINESS_PATH}/media_albums_manager/src/vo/set_photo_album_order_vo.cpp",
    "${MEDIALIB_BUSINESS_PATH}/media_albums_manager/src/vo/set_subtitle_vo.cpp",
    "${MEDIALIB_BUSINESS_PATH}/media_assets_manager/src/vo/create_asset_vo.cpp",
    "${MEDIALIB_BUSINESS_PATH}/media_assets_manager/src/vo/delete_photos_vo.cpp",
    "${MEDIALIB_INNERKITS_PATH}/medialibrary_data_extension/src/medialibrary_album_operations.cpp",
    "${MEDIALIB_SERVICES_PATH}/media_analysis_extension/src/media_analysis_proxy.cpp",
    "${MEDIALIB_UTILS_PATH}/src/media_itypes_utils.cpp",
    "${MEDIALIB_BUSINESS_PATH}/media_albums_manager/src/vo/get_albums_lpath_by_ids_vo.cpp",
    "../medialibrary_unittest_utils/src/medialibrary_unittest_utils.cpp",
    "./src/album_add_assets_test.cpp",
    "./src/album_commit_modify_test.cpp",
    "./src/album_delete_assets_test.cpp",
    "./src/album_get_assets_test.cpp",
    "./src/album_recover_assets_test.cpp",
    "./src/album_remove_assets_test.cpp",
    "./src/album_set_cover_uri_test.cpp",
    "./src/change_assets_test.cpp",
    "./src/change_request_set_album_property_test.cpp",
    "./src/create_album_test.cpp",
    "./src/delete_albums_test.cpp",
    "./src/delete_highlight_albums_test.cpp",
    "./src/get_albums_by_ids_test.cpp",
    "./src/get_data_analysis_process_test.cpp",
    "./src/get_face_id_test.cpp",
    "./src/get_highlight_album_info_test.cpp",
    "./src/get_order_position_test.cpp",
    "./src/get_photo_album_object_test.cpp",
    "./src/get_photo_index_test.cpp",
    "./src/get_relationship_test.cpp",
    "./src/media_albums_controller_test.cpp",
    "./src/query_albums_test.cpp",
    "./src/set_highlight_attribute_test.cpp",
    "./src/set_photo_album_order_test.cpp",
    "./src/set_relationship_test.cpp",
    "./src/album_dismiss_assets_test.cpp",
    "./src/get_albums_lpath_by_ids_test.cpp",
    "./src/query_albums_lpaths_test.cpp",
  ]
  deps = [
    "${MEDIALIB_INNERKITS_PATH}/media_library_helper:media_library",
    "${MEDIALIB_INNERKITS_PATH}/medialibrary_data_extension:medialibrary_data_extension",
  ]

  external_deps = [
    "ability_base:want",
    "ability_base:zuri",
    "ability_runtime:ability_context_native",
    "ability_runtime:ability_manager",
    "ability_runtime:abilitykit_native",
    "ability_runtime:app_context",
    "ability_runtime:napi_base_context",
    "ability_runtime:runtime",
    "bundle_framework:appexecfwk_core",
    "c_utils:utils",
    "common_event_service:cesfwk_innerkits",
    "data_share:datashare_common",
    "data_share:datashare_consumer",
    "data_share:datashare_provider",
    "e2fsprogs:libext2_uuid",
    "ffrt:libffrt",
    "hilog:libhilog",
    "hisysevent:libhisysevent",
    "hitrace:hitrace_meter",
    "i18n:intl_util",
    "image_framework:image_native",
    "init:libbegetutil",
    "ipc:ipc_single",
    "ipc:ipc_napi",
    "kv_store:distributeddata_inner",
    "libxml2:libxml2",
    "napi:ace_napi",
    "os_account:libaccountkits",  # ohos_account
    "os_account:os_account_innerkits",  # os_account
    "player_framework:media_client",
    "relational_store:native_rdb",
    "relational_store:rdb_data_share_adapter",
    "zlib:shared_libz",
  ]
  defines = []
  if (defined(global_parts_info) &&
      defined(global_parts_info.filemanagement_dfs_service)) {
    defines += [ "CLOUD_SYNC_MANAGER" ]
    external_deps += [ "dfs_service:cloudsync_kit_inner" ]
  }
  defines += [ "MEDIALIBRARY_COMPATIBILITY=1" ]
  sanitize = {
    cfi = true
    cfi_cross_dso = true
    debug = false
  }
}
