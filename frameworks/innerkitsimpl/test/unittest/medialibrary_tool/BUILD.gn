# Copyright (C) 2023 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/ohos.gni")
import("//foundation/multimedia/media_library/media_library.gni")

ohos_executable("mediatool") {
  install_enable = true
  include_dirs = []
  sources = [ "src/main.cpp" ]
  deps = []
  defines = []
  external_deps = []

  include_dirs = [
    "./include",
    "../get_self_permissions/include",
    "${MEDIALIB_ROOT_PATH}/frameworks/innerkitsimpl/media_library_helper/include",
    "${MEDIALIB_ROOT_PATH}/frameworks/services/media_thumbnail/include",
    "${MEDIALIB_ROOT_PATH}/frameworks/utils/include",
    "${MEDIALIB_ROOT_PATH}/interfaces/innerkits/native/include",
    "${MEDIALIB_ROOT_PATH}/interfaces/inner_api/media_library_helper/include",
    "${MEDIALIB_ROOT_PATH}/interfaces/kits/js/include",
  ]

  sources += [
    "../get_self_permissions/src/get_self_permissions.cpp",
    "src/command/command.cpp",
    "src/command/delete_command_v10.cpp",
    "src/command/list_command_v10.cpp",
    "src/command/recv_command_v10.cpp",
    "src/command/send_command_v10.cpp",
    "src/command_line.cpp",
    "src/control_main.cpp",
    "src/exec_env.cpp",
    "src/userfile_client_ex.cpp",
    "src/utils/database_utils.cpp",
  ]

  defines += [ "MEDIALIBRARY_MEDIATOOL_START=1" ]

  deps += [
    "${MEDIALIB_INNERKITS_PATH}/media_library_helper:media_library",
    "${MEDIALIB_INNERKITS_PATH}/medialibrary_data_extension:medialibrary_data_extension",
    "${MEDIALIB_INTERFACES_PATH}/kits/js:medialibrary_nutils",
  ]

  external_deps += [
    "ability_base:want",
    "ability_base:zuri",
    "ability_runtime:ability_manager",
    "ability_runtime:abilitykit_native",
    "ability_runtime:dataobs_manager",
    "ability_runtime:napi_base_context",
    "access_token:libaccesstoken_sdk",
    "access_token:libnativetoken",
    "access_token:libtoken_setproc",
    "c_utils:utils",
    "data_share:datashare_common",
    "data_share:datashare_consumer",
    "data_share:datashare_provider",
    "device_auth:deviceauth_sdk",
    "hilog:libhilog",
    "hitrace:hitrace_meter",
    "napi:ace_napi",
    "samgr:samgr_proxy",
  ]

  ldflags = [ "-Wl,--gc-sections" ]

  cflags = [
    "-fdata-sections",
    "-ffunction-sections",
    "-Os",
  ]

  cflags_cc = [ "-Os" ]

  if (!link_opt) {
    sanitize = {
      cfi = true
      cfi_cross_dso = true
      debug = false
      integer_overflow = true
      ubsan = true
      boundary_sanitize = true
      stack_protector_ret = true
    }
  }

  subsystem_name = "multimedia"
  part_name = "media_library"
}
