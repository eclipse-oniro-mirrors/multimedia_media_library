# Copyright (C) 2021 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/test.gni")
import("//foundation/multimedia/media_library/media_library.gni")

if (defined(medialibrary_mtp_enable)) {
  module_output_path = "media_library/medialibrary_mtp"
  group("unittest") {
    testonly = true

    deps = [ ":medialibrary_mtp_test" ]
  }

  ohos_unittest("medialibrary_mtp_test") {
    module_out_path = module_output_path
    include_dirs = [
      "./include",
      "${MEDIALIB_MTP_PATH}/include",
      "${MEDIALIB_INTERFACES_PATH}/inner_api/media_library_helper/include",
      "${MEDIALIB_INNERKITS_PATH}/media_library_helper/include",
      "${MEDIALIB_SERVICES_PATH}/media_library/include",
      "${MEDIALIB_UTILS_PATH}/include",
      "${MEDIALIB_INNERKITS_PATH}/media_library_helper/include",
      "${MEDIALIB_INTERFACES_PATH}/inner_api/media_library_helper/include",
      "${MEDIALIB_MTP_PATH}/include/",
    ]

    sources = [
      "src/debug_printf.cpp",
      "src/medialibrary_mtp_unit_test.cpp",
      "src/mock_mtp_driver.cpp",
      "src/mock_mtp_operation_utils.cpp",
      "src/mtp_payload_data_test.cpp",
      "src/mtp_set_object_prop_test.cpp",
      "src/mtp_test.cpp",
    ]

    deps = [
      "${MEDIALIB_INNERKITS_PATH}/media_library_helper:media_library",
      "${MEDIALIB_MTP_PATH}:media_mtp",
    ]

    external_deps = [
      "ability_base:base",
      "ability_base:want",
      "ability_base:zuri",
      "ability_runtime:abilitykit_native",
      "ability_runtime:app_context",
      "ability_runtime:dataobs_manager",
      "c_utils:utils",
      "common_event_service:cesfwk_innerkits",
      "data_share:datashare_common",
      "data_share:datashare_consumer",
      "drivers_interface_usb:usbfn_mtp_idl_headers",
      "hilog:libhilog",
      "hitrace:hitrace_meter",
      "init:libbegetutil",
      "ipc:ipc_core",
      "player_framework:media_client",
      "relational_store:native_rdb",
      "safwk:system_ability_fwk",
      "samgr:samgr_proxy",
      "storage_service:storage_manager_sa_proxy",
    ]

    sanitize = {
      cfi = true
      cfi_cross_dso = true
      debug = false
    }

    if (defined(global_parts_info.powermgr_battery_manager)) {
      external_deps += [ "battery_manager:batterysrv_client" ]
      cflags_cc = [ "-DHAS_BATTERY_MANAGER_PART" ]
    }
  }
}
