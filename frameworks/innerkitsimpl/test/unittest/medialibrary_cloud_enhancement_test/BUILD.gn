# Copyright (C) 2023 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/test.gni")
import("//foundation/multimedia/media_library/media_library.gni")

group("unittest") {
  testonly = true
  deps = [
    ":medialibrary_cloud_enhancement_get_pair_test",
    ":medialibrary_cloud_enhancement_test",
  ]
}

ohos_unittest("medialibrary_cloud_enhancement_test") {
  module_out_path = "media_library/medialibrary_cloud_enhancement_test"

  include_scanner = [
    "${MEDIALIB_SERVICES_PATH}/media_scanner/include/callback",
    "${MEDIALIB_SERVICES_PATH}/media_scanner/include/scanner",
  ]

  include_dirs = [
    "./include",
    "../get_self_permissions/include",
    "../medialibrary_unittest_utils/include",
    "${MEDIALIB_INNERKITS_PATH}/media_library_helper/include",
    "${MEDIALIB_INTERFACES_PATH}/inner_api/media_library_helper/include",
    "${MEDIALIB_SERVICES_PATH}/media_file_extension/include",
    "${MEDIALIB_UTILS_PATH}/include",
    "${MEDIALIB_THIRD_PARTY_PATH}/googletest/googletest/include",
    "${MEDIALIB_SERVICES_PATH}/media_cloud_enhancement/include/enhancement_service",
    "${MEDIALIB_SERVICES_PATH}/media_cloud_enhancement/include/utils",
    "${MEDIALIB_INNERKITS_PATH}/medialibrary_data_extension/include",
    "${MEDIALIB_SERVICES_PATH}/media_thumbnail/include",
    "//third_party/json/include",
    "//third_party/openssl/include/",

    "${MEDIALIB_INTERFACES_PATH}/innerkits/native/include",
    "${MEDIALIB_SERVICES_PATH}/media_analysis_extension/include",
    "${MEDIALIB_SERVICES_PATH}/media_async_worker/include",
    "${MEDIALIB_SERVICES_PATH}/media_cloud_sync_notify_handle/include",
    "${MEDIALIB_SERVICES_PATH}/media_permission/include",
    "${MEDIALIB_SERVICES_PATH}/media_cloud_sync/include",
    "../../../../../../../../base/security/access_token/interfaces/innerkits/privacy/include",
    "../../../../../../player_framework/interfaces/inner_api/native",
    "../../../../../../../filemanagement/app_file_service/interfaces/common/include",
  ]

  include_dirs += include_scanner

  sources = [
    "../get_self_permissions/src/get_self_permissions.cpp",
    "../medialibrary_unittest_utils/src/medialibrary_unittest_utils.cpp",
    "./src/medialibrary_cloud_enhancement_test.cpp",
  ]

  deps = [
    "${MEDIALIB_INNERKITS_PATH}/media_library_helper:media_library",
    "${MEDIALIB_INNERKITS_PATH}/medialibrary_data_extension:medialibrary_data_extension",
    "${MEDIALIB_THIRD_PARTY_PATH}/googletest:gmock_main",
    "${MEDIALIB_THIRD_PARTY_PATH}/googletest:gtest_main",
  ]

  external_deps = [
    "ability_base:configuration",
    "ability_base:want",
    "ability_base:zuri",
    "ability_runtime:ability_context_native",
    "ability_runtime:ability_manager",
    "ability_runtime:abilitykit_native",
    "ability_runtime:app_context",
    "ability_runtime:app_manager",
    "ability_runtime:dataobs_manager",
    "ability_runtime:extensionkit_native",
    "ability_runtime:runtime",
    "ability_runtime:uri_permission_mgr",
    "access_token:libaccesstoken_sdk",
    "access_token:libnativetoken_shared",
    "access_token:libprivacy_sdk",
    "access_token:libtokensetproc_shared",
    "app_file_service:sandbox_helper_native",
    "background_task_mgr:bgtaskmgr_innerkits",
    "bundle_framework:appexecfwk_core",
    "c_utils:utils",
    "common_event_service:cesfwk_innerkits",
    "data_share:datashare_common",
    "data_share:datashare_consumer",
    "data_share:datashare_provider",
    "dfs_service:cloudsync_kit_inner",
    "eventhandler:libeventhandler",
    "ffrt:libffrt",
    "file_api:filemgmt_libn",
    "hilog:libhilog",
    "hitrace:hitrace_meter",
    "image_framework:image_native",
    "init:libbegetutil",
    "ipc:ipc_core",
    "ipc:ipc_single",
    "kv_store:distributeddata_inner",
    "libexif:libexif",
    "napi:ace_napi",
    "os_account:os_account_innerkits",
    "player_framework:media_client",
    "preferences:native_preferences",
    "relational_store:native_rdb",
    "relational_store:rdb_data_share_adapter",
    "safwk:system_ability_fwk",
    "samgr:samgr_proxy",
    "user_file_service:file_access_extension_ability_kit",
    "window_manager:libdm",
  ]

  defines = []

  defines += [ "MEDIALIBRARY_COMPATIBILITY=1" ]

  if (defined(global_parts_info) && defined(
          global_parts_info.device_cloud_gateway_media_cloud_enhance_service) &&
      global_parts_info.device_cloud_gateway_media_cloud_enhance_service &&
      factory != true) {
    defines += [ "ABILITY_CLOUD_ENHANCEMENT_SUPPORT" ]
    include_dirs += [ "${MEDIALIB_CLOUD_ENHANCEMENT_SERVICE_PATH}/interfaces/inner_api/include/c_api" ]
  }

  resource_config_file =
      "${MEDIALIB_INNERKITS_PATH}/test/unittest/resources/ohos_test.xml"
}

ohos_unittest("medialibrary_cloud_enhancement_get_pair_test") {
  module_out_path = "media_library/cloud_enhancement_get_pair_test"

  include_scanner = [
    "${MEDIALIB_SERVICES_PATH}/media_scanner/include/callback",
    "${MEDIALIB_SERVICES_PATH}/media_scanner/include/scanner",
  ]

  include_dirs = [
    "./include",
    "../get_self_permissions/include",
    "../medialibrary_unittest_utils/include",
    "${MEDIALIB_INNERKITS_PATH}/media_library_helper/include",
    "${MEDIALIB_INTERFACES_PATH}/inner_api/media_library_helper/include",
    "${MEDIALIB_SERVICES_PATH}/media_file_extension/include",
    "${MEDIALIB_UTILS_PATH}/include",
    "${MEDIALIB_THIRD_PARTY_PATH}/googletest/googletest/include",
    "${MEDIALIB_SERVICES_PATH}/media_cloud_enhancement/include/enhancement_service",
    "${MEDIALIB_SERVICES_PATH}/media_cloud_enhancement/include/utils",
    "${MEDIALIB_INNERKITS_PATH}/medialibrary_data_extension/include",
    "${MEDIALIB_SERVICES_PATH}/media_thumbnail/include",
    "//third_party/json/include",
    "//third_party/openssl/include/",

    "${MEDIALIB_INTERFACES_PATH}/innerkits/native/include",
    "${MEDIALIB_SERVICES_PATH}/media_analysis_extension/include",
    "${MEDIALIB_SERVICES_PATH}/media_async_worker/include",
    "${MEDIALIB_SERVICES_PATH}/media_cloud_sync_notify_handle/include",
    "${MEDIALIB_SERVICES_PATH}/media_permission/include",
    "${MEDIALIB_SERVICES_PATH}/media_cloud_sync/include",
    "../../../../../../../../base/security/access_token/interfaces/innerkits/privacy/include",
    "../../../../../../player_framework/interfaces/inner_api/native",
    "../../../../../../../filemanagement/app_file_service/interfaces/common/include",
  ]

  include_dirs += include_scanner

  sources = [
    "../get_self_permissions/src/get_self_permissions.cpp",
    "../medialibrary_unittest_utils/src/medialibrary_unittest_utils.cpp",
    "./src/medialibrary_cloud_enhancement_get_pair_test.cpp",
  ]

  deps = [
    "${MEDIALIB_INNERKITS_PATH}/media_library_helper:media_library",
    "${MEDIALIB_INNERKITS_PATH}/medialibrary_data_extension:medialibrary_data_extension",
    "${MEDIALIB_THIRD_PARTY_PATH}/googletest:gmock_main",
    "${MEDIALIB_THIRD_PARTY_PATH}/googletest:gtest_main",
  ]

  external_deps = [
    "ability_base:configuration",
    "ability_base:want",
    "ability_base:zuri",
    "ability_runtime:ability_context_native",
    "ability_runtime:ability_manager",
    "ability_runtime:abilitykit_native",
    "ability_runtime:app_context",
    "ability_runtime:app_manager",
    "ability_runtime:dataobs_manager",
    "ability_runtime:extensionkit_native",
    "ability_runtime:runtime",
    "ability_runtime:uri_permission_mgr",
    "access_token:libaccesstoken_sdk",
    "access_token:libnativetoken_shared",
    "access_token:libprivacy_sdk",
    "access_token:libtokensetproc_shared",
    "app_file_service:sandbox_helper_native",
    "background_task_mgr:bgtaskmgr_innerkits",
    "bundle_framework:appexecfwk_core",
    "c_utils:utils",
    "common_event_service:cesfwk_innerkits",
    "data_share:datashare_common",
    "data_share:datashare_consumer",
    "data_share:datashare_provider",
    "dfs_service:cloudsync_kit_inner",
    "eventhandler:libeventhandler",
    "ffrt:libffrt",
    "file_api:filemgmt_libn",
    "hilog:libhilog",
    "hitrace:hitrace_meter",
    "image_framework:image_native",
    "init:libbegetutil",
    "ipc:ipc_core",
    "ipc:ipc_single",
    "kv_store:distributeddata_inner",
    "libexif:libexif",
    "napi:ace_napi",
    "os_account:os_account_innerkits",
    "player_framework:media_client",
    "preferences:native_preferences",
    "relational_store:native_rdb",
    "relational_store:rdb_data_share_adapter",
    "safwk:system_ability_fwk",
    "samgr:samgr_proxy",
    "user_file_service:file_access_extension_ability_kit",
    "window_manager:libdm",
  ]

  defines = []

  defines += [ "MEDIALIBRARY_COMPATIBILITY=1" ]

  if (defined(global_parts_info) && defined(
          global_parts_info.device_cloud_gateway_media_cloud_enhance_service) &&
      global_parts_info.device_cloud_gateway_media_cloud_enhance_service &&
      factory != true) {
    defines += [ "ABILITY_CLOUD_ENHANCEMENT_SUPPORT" ]
  }

  resource_config_file =
      "${MEDIALIB_INNERKITS_PATH}/test/unittest/resources/ohos_test.xml"
}
