# Copyright (C) 2021-2022 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/test.gni")
import("//foundation/multimedia/media_library/media_library.gni")

group("unittest") {
  testonly = true

  deps = [ ":medialibrary_rdb_test" ]
}

ohos_unittest("medialibrary_rdb_test") {
  module_out_path = "media_library/media_library-asset"
  include_dirs = [
    "./include",
    "./include/event_handler",
    "../medialibrary_unittest_utils/include",
    "../get_self_permissions/include",
    "${MEDIALIB_CLOUD_SYNC_PATH}/include",
    "${MEDIALIB_INNERKITS_PATH}/medialibrary_data_extension/include/distributed_media_library/device_manage",
    "${MEDIALIB_INNERKITS_PATH}/medialibrary_data_extension/include/distributed_media_library/database_manage",
    "${MEDIALIB_INNERKITS_PATH}/medialibrary_data_extension/include/distributed_media_library/devices_info_interact",
    "${MEDIALIB_INTERFACES_PATH}/inner_api/media_library_helper/include",
    "${MEDIALIB_INNERKITS_PATH}/media_library_helper/include",
    "${MEDIALIB_UTILS_PATH}/include",
    "${MEDIALIB_INNERKITS_PATH}/medialibrary_data_extension/include",
    "${MEDIALIB_SERVICES_PATH}/media_thumbnail/include",
    "${MEDIALIB_SERVICES_PATH}/media_scanner/include/scanner",
  ]

  cflags = [ "-fno-access-control" ]

  sources = [
    "${MEDIALIB_UTILS_PATH}/src/settings_data_manager.cpp",
    "${MEDIALIB_CLOUD_SYNC_PATH}/src/cloud_sync_helper.cpp",
    "${MEDIALIB_INNERKITS_PATH}/medialibrary_data_extension/src/moving_photo_processor.cpp",
    "${MEDIALIB_SERVICES_PATH}/media_dfx/src/dfx_utils.cpp",
    "${MEDIALIB_SERVICES_PATH}/media_scanner/src/scanner/metadata.cpp",
    "../medialibrary_unittest_utils/src/medialibrary_unittest_utils.cpp",
    "./src/event_handler/table_event_handler_on_create_test.cpp",
    "./src/event_handler/table_event_handler_on_upgrade_test.cpp",
    "./src/media_datashare_stub_impl_test.cpp",
    "./src/medialibrary_dir_operations_test.cpp",
    "./src/medialibrary_rdb_test.cpp",
    "./src/medialibrary_subscriber_test.cpp",
    "./src/moving_photo_processor_test.cpp",
  ]
  deps = [
    "${MEDIALIB_INNERKITS_PATH}/media_library_helper:media_library",
    "${MEDIALIB_INNERKITS_PATH}/medialibrary_data_extension:medialibrary_data_extension",
    "${MEDIALIB_UTILS_PATH}:permission_utils",
  ]

  external_deps = [
    "ability_base:want",
    "ability_base:zuri",
    "ability_runtime:ability_context_native",
    "ability_runtime:ability_manager",
    "ability_runtime:app_context",
    "ability_runtime:dataobs_manager",
    "ability_runtime:extensionkit_native",
    "ability_runtime:runtime",
    "c_utils:utils",
    "common_event_service:cesfwk_innerkits",
    "data_share:datashare_common",
    "data_share:datashare_consumer",
    "data_share:datashare_provider",
    "ffrt:libffrt",
    "device_manager:devicemanagersdk",
    "kv_store:distributeddata_inner",
    "napi:ace_napi",
    "ipc:ipc_napi",
    "player_framework:media_client",
    "relational_store:native_rdb",
    "relational_store:rdb_data_share_adapter",
  ]

  defines = []

  if (defined(global_parts_info) &&
      defined(global_parts_info.filemanagement_dfs_service)) {
    defines += [ "CLOUD_SYNC_MANAGER" ]
    external_deps += [ "dfs_service:cloudsync_kit_inner" ]
  }

  sanitize = {
    cfi = true
    cfi_cross_dso = true
    debug = false
  }

  if (is_standard_system) {
    external_deps += [ "hilog:libhilog" ]
  } else {
    external_deps += [ "hilog:libhilog" ]
  }

  resource_config_file =
      "${MEDIALIB_INNERKITS_PATH}/test/unittest/resources/ohos_test.xml"
}
